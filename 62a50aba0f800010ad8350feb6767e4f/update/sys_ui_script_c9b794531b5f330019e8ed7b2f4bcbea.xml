<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>sn_kpi_composer.DashboardRowModal</name>
        <script><![CDATA[var DashboardRowModal = createReactClass({	
	getInitialState: function() {
		return {
			nrofcanvasses: this.props.row != null ? this.props.row.nrofcanvasses : 1,
			disabled: false
		};
	},
	
	handleInputNrOfCanvassesChange: function(event) {
		this.setState({ nrofcanvasses: event.target.value });
	},
	
	onOpened: function() {
		if (this.refs.nrofcanvassesinput) {
			this.refs.nrofcanvassesinput.focus();
		}
	},
	
	cancel: function() {
		this.setState({ disabled: true });
		this.props.onCancel();
	},
	
	save: function() {
		this.setState({ disabled: true });
		this.props.onSave({ nrofcanvasses: this.state.nrofcanvasses });
	},

	handleSubmit: function(event) {
		event.preventDefault();
	},
	
	render: function() {
		var closeButton = e(
			'button',
			{type: 'button', title: getMessage('Close'), className: 'btn btn-icon close icon-cross  sn-tooltip-basic', disabled: this.state.disabled, onClick: this.cancel },
			e(
				'span',
				{ className: 'sr-only' },
				getMessage('Close')
			)
		);
		
		
		var loadingOverlay = null;
		if (this.state.disabled === true) {
			loadingOverlay = e(
				'div',
				{className: 'modal-overlay'},
				e(
					'div',
					{ className: 'icon-loading' }
				)
			);
		}
		
		var nrofcanvassesoptions = [1,2,3].map(function (p) {
			return e(
				'option',
				{ key: p, value: p },
				p
			);
		});
		
		return e(
			Reactstrap.Modal, 
			{'isOpen': true, size: 'sm', onOpened: this.onOpened, toggle: this.cancel },
			e(
				Reactstrap.ModalHeader,
				{'toggle': this.cancel, close: closeButton},
				getMessage('Row details')
			),
			e(
				Reactstrap.ModalBody,
				{},
				e(
					'form',
					{ onSubmit: this.handleSubmit },
					e(
						'div',
						{ className: 'form-group' },
						e(
							'label',
							{ className: 'control-label', htmlFor: 'row-number-of-canvases' },
							getMessage('Number of canvases')
						),
						e(
							'div',
							{ },
							e(
								'select',
								{ id: 'row-number-of-canvases', className: 'form-control', ref: 'nrofcanvassesinput', disabled: this.state.disabled, value: this.state.nrofcanvasses, onChange: this.handleInputNrOfCanvassesChange },
								nrofcanvassesoptions
							)
						)
					)
				)
			),
			e(
				Reactstrap.ModalFooter,
				{},
				e(
					'button',
					{ type: 'button', className: 'btn btn-primary', disabled: this.state.disabled, onClick: this.save },
					getMessage('Save')
				),
				e(
					'button',
					{ type: 'button', className: 'btn sn-btn-outline-secondary', disabled: this.state.disabled, onClick: this.cancel },
					getMessage('Cancel')
				)
			),
			loadingOverlay
		);
	}
});]]></script>
        <script_name>DashboardRowModal</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-08-21 08:16:08</sys_created_on>
        <sys_id>c9b794531b5f330019e8ed7b2f4bcbea</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>sn_kpi_composer.DashboardRowModal</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy/>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_ui_script_c9b794531b5f330019e8ed7b2f4bcbea</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-04-20 14:27:01</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
