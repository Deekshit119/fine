<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>sn_kpi_composer.EntityLinkedDef</name>
        <script><![CDATA[var EntityLinkedDefinition = createReactClass({
	render: function() {
        var entity = this.props.entity;

		var indicator_definition = null;
		if (entity.indicator_definition != null) {
			var indicatordefs = this.props.indicatordefinitions.filter(function (ind) { return ind.sys_id === entity.indicator_definition; });
			if (indicatordefs.length == 1) {
				indicator_definition = indicatordefs[0];
			}
        }
        
        var reportdefinitioncontrols = null;
        if (this.props.showreport_definitions === true || entity.report_definition != null) {
            var report_definition = null;
            if (entity.report_definition != null) {
                var reportdefs = this.props.report_definitions.filter(function (rep) { return rep.sys_id === entity.report_definition; });
                if (reportdefs.length == 1) {
                    report_definition = reportdefs[0];
                }
            }
            reportdefinitioncontrols = [
                e(
                    'div',
                    { key:'header', className: 'sn-aside-header'},
                    e(
                        'span',
                        null,
                        getMessage('Report Definition')
                    )
                ),
                e(
                    'div',
                    { key: 'list', className: 'sn-aside-body wb-pa-aside-body'},
                    e(
                        ReportDefinitionList,
                        {
                            report_definition: report_definition,
                            addPlaceholder: getMessage('Select Item'),
                            onReportDefinitionSave: this.props.onReportDefinitionSave,
                            onReportShowDetail: this.props.onReportShowDetail
                        }
                    )
                )
            ];
        }
			
		return e(
			'div',
            null,
            reportdefinitioncontrols,
			e(
				'div',
				{className: 'sn-aside-header'},
				e(
					'span',
					null,
					getMessage('Indicator Definition')
				)
			),
			e(
				'div',
				{className: 'sn-aside-body wb-pa-aside-body'},
				e(
					IndicatorDefinitionList,
					{
						indicatordefinition: indicator_definition,
						addPlaceholder: getMessage('Select Item'),
                        onIndicatorDefinitionSave: this.props.onIndicatorDefinitionSave,
                        onIndicatorShowDetail: this.props.onIndicatorShowDetail
					}
				)
			)
		);
	}
});]]></script>
        <script_name>EntityLinkedDef</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-09 15:37:21</sys_created_on>
        <sys_id>61984fb0dbb79810d2e9d3f3ca961942</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>sn_kpi_composer.EntityLinkedDef</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy/>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_ui_script_61984fb0dbb79810d2e9d3f3ca961942</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-11-20 17:27:47</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
