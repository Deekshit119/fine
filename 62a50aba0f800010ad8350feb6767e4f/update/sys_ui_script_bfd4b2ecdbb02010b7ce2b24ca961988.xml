<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>sn_kpi_composer.NavHubShareOverview</name>
        <script><![CDATA[var SHAREPOSSIBLETABS = [{key: "", value: getMessage('All')}, {key: "Group", value: getMessage('Groups')}, {key: "User", value: getMessage('Users')}];

var NavHubShareOverview = createReactClass({
	render: function() {
		var that = this;
		
		var listitems = this.props.project_permissions.filter(function(permission) {
            if (that.props.filter_permissiontype) {
                return permission.permissiontype === that.props.filter_permissiontype;
            } else {
                return true;
            }
        }).map(
			function (permission) {
				return e(
					NavHubShareItem,
					{ key: permission.sys_id, permission: permission, onPermissionEdit: that.props.onPermissionEdit, onPermissionDelete: that.props.onPermissionDelete }
				);
			}
        );

        var maincontent = null;
        if (listitems.length > 0) {
            maincontent = e(
                'ul',
                {className: 'sn-widget-datalist'},
                listitems
            );
        } else {
            maincontent = e(
                'div',
                {className: 'sn-dashboard-sharing-no-data'},
                getMessage("No items to show")
            );
		}
		
		var addnewctrl;
		if (this.props.onPermissionAdd) {
			addnewctrl = e(
				'ul',
				{className: 'sn-widget-datalist'},
				e(
					'li',
					{ key: 'addnew', className: 'addnew', onClick: this.props.onPermissionAdd },
					e(
						'span',
						{ className: 'icon-add-circle-empty icon'}
					),
					e(
						'div',
						{ className: 'item-name' },
						getMessage("Add groups and users")
					)
				)
			);
		} else {
			addnewctrl = null;
		}
		var downloadUrl = "sn_kpi_composer_download_project_json.do?sys_id=" + this.props.project_sys_id + "&sysparm_ck=" + window.g_ck;
		return e(
			'div',
			null,
			e(
				'div',
				{className: 'sn-aside-header'},
				e(
					'span',
					null,
					getMessage('Share')
				),
				e(
					'div',
					{className : 'sn-aside-btn icon-cross', 'aria-label': getMessage('Close Share Panel'), role: 'button', tabIndex: '0', onClick: this.props.onCloseActiveAside}
				)
			),
			e(
				'div',
                {className: 'sn-aside-body wb-pa-aside-body'},
                addnewctrl,
                e(
                    'div',
                    { className: 'sn-dashboard-sharing-nav-buttons', role: 'tablist' },
                    SHAREPOSSIBLETABS.map(function (tab, i) {
                        return e(
                            NavHubShareTypeFilter,
                            { key: i, tab: tab, selected: tab.key === that.props.filter_permissiontype, onClick: that.props.onFilterPermissionTypeChanged }
                        );
                    })
                ),
				maincontent,
				e(
					'div',
					{ className: 'sn-aside-group-title' },
					e(
						'span',
						null,
						getMessage("Export Project")
					)
				),
				e(
					'div',
					{ className: "sn-widget sn-widget_border-bottom sn-widget-form" },
					e(
						"p",
						null,
						getMessage("When exporting a project, the following fields are not included in the export: references to knowledge articles, responsible users and contacts as well as project journal entries.")
					),
					e(
						"a",
						{ className: "btn btn-default", target: "_blank", href: downloadUrl },
						getMessage("Download")
					)
				)
			)
		);
	}
});]]></script>
        <script_name>NavHubShareOverview</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-27 12:35:14</sys_created_on>
        <sys_id>bfd4b2ecdbb02010b7ce2b24ca961988</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>sn_kpi_composer.NavHubShareOverview</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy/>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_ui_script_bfd4b2ecdbb02010b7ce2b24ca961988</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-11-18 10:45:56</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
