<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>sn_kpi_composer.projectReportDefinitions</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>projectReportDefinitions</name>
        <script><![CDATA[ function projectReportDefinitions(input) {

	if (!input || !input.project || !input.project.sys_id) {
		input = {};
		input.project = {};
		input.project.sys_id = "NO_PROJECT_SYS_ID";
		return [];
	} 
	// First check if user has read access to the project
	var project = new GlideRecord("sn_kpi_composer_project");
	project.get(input.project.sys_id);
	if (!project.isValidRecord() || !project.canRead()){
		throw 'Project does not exist or no read access for the project: ' + input.project.sys_id;
	}

	var entityApi = new sn_kpi_composer.EntityApi();	 
	var data = entityApi.getData(input);	
	var report_definitions = [];
	for(var idx = 0; idx<data.report_definitions.length; idx++) {
		report_definitions.push(data.report_definitions[idx].sys_id);
	}
	return report_definitions;	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-24 10:38:00</sys_created_on>
        <sys_id>ac20a469db767050317f6a5f0596191f</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>projectReportDefinitions</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_script_include_ac20a469db767050317f6a5f0596191f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-27 16:54:53</sys_updated_on>
    </sys_script_include>
</record_update>
