<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>sn_kpi_composer.NavHubPersonaList</name>
        <script><![CDATA[var NavHubPersonaList = createReactClass({
	getInitialState: function() {
		return { edit: false, hover: false, delete: false };
	},
	
	onMouseEnter: function() {
		this.setState({ hover: true });
	},
	
	onMouseLeave: function() {
		this.setState({ hover: false });
	},
	
	onEditClick: function () {
		this.setState({ edit: true, saving: false, name: this.props.persona.name });
	},
	
	handleNameInputChange: function(event) {
		this.setState({ name: event.target.value });
	},
	
	handleNameInputBlur: function(event) {
		this.saveItemIfNeeded();
	},
	
	handleSubmit: function(event) {
		event.preventDefault();
		this.saveItemIfNeeded();
	},
	
	saveItemIfNeeded: function() {
		if (this.state.name !== this.props.persona.name) {
			this.setState({ saving: true });
			var that = this;
			if (!this.state.name) {
				//when name is null, delete record
				this.onDeleteClick();
			} else {
				this.props.onPersonaSave(this.props.persona.sys_id, this.state.name, function(error) {
					that.setState({ edit: false });
				});
			}
			
		} else {
			this.setState({ edit: false });
		}
	},
	
	onDeleteClick: function() {
		this.setState({ delete: true });
	},
	
	onDeleteNo: function() {
		this.setState(function(state, props) {
			var newstate = { delete: false };
			if (state.edit) {
				newstate.edit = false;
				newstate.saving = false;
				newstate.name = props.persona.name;
			}
			return newstate;
		});
	},
	
	onDeleteYes: function() {
		this.props.onPersonaDelete(this.props.persona.sys_id, function(error){
			//todo: show error
		});
	},
	
	render: function() {
		var confirmremoval = null;
		if (this.state.delete === true) {
			confirmremoval = e(
				ConfirmRemoval,
				{ onYes: this.onDeleteYes, onNo: this.onDeleteNo }
			);
		}
		
		var buttons = null;
		if (this.state.hover === true) {
			buttons = e(
				'div',
				{ className: 'icon-contain' },
				e(
					'span',
					{ className: 'icon icon-delete sn-tooltip-basic', 'title': getMessage("Delete item"), onClick: this.onDeleteClick}
				)
			);
		}
		var name = null;
		if (this.state.edit === true) {
			name = e(
				'form',
				{className: 'item-name', onSubmit: this.handleSubmit},
				e(
					'input',
					{ type: 'text', autoFocus: true, placeholder: getMessage('Edit Item'), className: 'form-control', disabled: this.state.saving, value: this.state.name, onChange: this.handleNameInputChange, onBlur: this.handleNameInputBlur, maxLength: 25 }
				)
			);
		} else {
			var divprops;
			if (this.props.onPersonaSave) {
				divprops = { className: 'item-name editable', onClick: this.onEditClick };
			} else {
				divprops = { className: 'item-name' };
			}
			name = e(
				'div',
				divprops,
				this.props.persona.name
			);
		}

		var liprops;
		if (this.props.onPersonaSave && this.props.onPersonaDelete) {
			liprops = { onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave };
		} else {
			liprops = {};
		}

		return e(
			'li',
			liprops,
			e(
				'div',
				{ className: 'wb-pa-filter-pill-decoration letter'},
				this.props.persona.abbreviation
			),
			name,
			buttons,
			confirmremoval
		);
	}
});]]></script>
        <script_name>NavHubPersonaList</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-02-08 11:51:34</sys_created_on>
        <sys_id>4cc406781be3ef00bcb985507e4bcb3b</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>sn_kpi_composer.NavHubPersonaList</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy/>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_ui_script_4cc406781be3ef00bcb985507e4bcb3b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-02-12 12:15:04</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
