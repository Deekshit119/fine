<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_kpi_composer.ProjectTaskCreateWidget</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ProjectTaskCreateWidget</name>
        <script><![CDATA[var ProjectTaskCreateWidget = Class.create();
ProjectTaskCreateWidget.prototype = Object.extendsObject(sn_kpi_composer.ProjectTask, {
	
	createtasks: function(data) {
		var that = this;
		if (this.trace) this._debug.push("ProjectTaskCreateWidget");	
					
		that._apply_on_dashboards(data.dashboards, 
			function(dashboard) { 			
				that._apply_on_tabs(dashboard.tabs,
					function(tab) {
						that._apply_on_rows(tab.rows, 
							function(row) {
								that._apply_on_canvasses(row.canvasses, 
									function(canvas) {
										if (canvas.widget_type == "Performance Analytics") {

											var defRecId = canvas.sys_id;
											var defTableNm = 'sn_kpi_composer_canvas';
												
											var taskDefRec = that._addOrGetTaskDefinitionRecord(defTableNm, defRecId, data.project.sys_id);
											if (that.trace) that._debug.push("Lookup DefRecId 10: " + defRecId + " for DefRecTableNm: " + defTableNm + " => " + JSON.stringify(taskDefRec));
											
											// Generic update of the status
											that._updateTaskDefinitionStatus(taskDefRec, canvas, canvas.pa_widget, data, (canvas.pa_widget != null));
								
											// Set artifact source table
											taskDefRec.artifact_table = 'pa_widgets';
								
											// Set the artifact target record
											taskDefRec.artifact_record = canvas.pa_widget;
								
											var desc = gs.getMessage("{0}Widget name: '{1}' placed on tab '{2}' within dashboard '{3}'", [taskDefRec.validationerrors, canvas.title, tab.caption, dashboard.name]);
											desc += gs.getMessage("\nDescription: {0}", canvas.description || "(empty)");
											desc += gs.getMessage("\nFollow element: {0}", canvas.follow_element);
											desc += gs.getMessage("\nTime series: {0}", canvas.time_serie_dv || "(empty)");
											
											taskDefRec.description = desc;
			
											var result = that._updateTaskDefinitionRecord(taskDefRec);							

										}									
								});							
						});					
				});
			});			
		
	},

    type: 'ProjectTaskCreateWidget'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-10-09 18:37:49</sys_created_on>
        <sys_id>8ecaf2cfdb58c010d5b45bd2ca961919</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>ProjectTaskCreateWidget</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_script_include_8ecaf2cfdb58c010d5b45bd2ca961919</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-19 14:33:39</sys_updated_on>
    </sys_script_include>
</record_update>
