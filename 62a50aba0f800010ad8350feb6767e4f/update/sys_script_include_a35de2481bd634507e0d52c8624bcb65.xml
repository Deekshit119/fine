<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_kpi_composer.ProjectTaskCreateTaskDefDependencies_CanvasIndicators</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Canvas &gt; Indicator dependecies</description>
        <name>ProjectTaskCreateTaskDefDependencies_CanvasIndicators</name>
        <script><![CDATA[var ProjectTaskCreateTaskDefDependencies_CanvasIndicators = Class.create();
ProjectTaskCreateTaskDefDependencies_CanvasIndicators.prototype = Object.extendsObject(sn_kpi_composer.ProjectTask, {
	
	createdependencies: function(data) {
		
		var that = this;

		if (this.trace) this._debug.push("ProjectTaskCreateTaskDefDependencies_CanvasIndicators");	

		//this._debug.push(JSON.stringify(data));

		// Create base api object for some basic functions
		var baseApi = new BaseApi();

		var canvases = baseApi._getCanvases(data.dashboards);

		if (this.trace) this._debug.push("Canvases:" + JSON.stringify(canvases));

		canvases.forEach(function(canvas) {
		
			// Only check canvasses wich have widget
		if (global.JSUtil.notNil(canvas.widget_type))
				{
				var defRecId = canvas.sys_id;
				var defTableNm = 'sn_kpi_composer_canvas';

				var taskDefRec = that._addOrGetTaskDefinitionRecord(defTableNm, defRecId, data.project.sys_id);
				if (that.trace) that._debug.push("Lookup DefRecId 9: " + defRecId + " for DefRecTableNm: " + defTableNm + " => " + JSON.stringify(taskDefRec));

				var dependencies = (taskDefRec.dependencies && taskDefRec.dependencies.split(",")) || [];

				if (canvas.entities) {

					var canvas_entities = canvas.entities.split(",");
					
					data.entities.forEach(function(e) { 

						if (e.indicator_definition && e.indicator_definition.length>0 && (canvas_entities.indexOf(e.sys_id)>-1)) {

							var depRecId = e.indicator_definition;
							var depTableNm = 'sn_kpi_composer_indicator_definition';

							var depTaskDefRec = that._addOrGetTaskDefinitionRecord(depTableNm, depRecId);

							if (that.trace) that._debug.push("Found dep taskdef: " + JSON.stringify(depTaskDefRec));

							if (depTaskDefRec && dependencies.indexOf(depTaskDefRec.sys_id)<0)
								dependencies.push(depTaskDefRec.sys_id);

						}

					});
				}

				// Set dependencies
				taskDefRec.dependencies = dependencies.join();

				// Update record
				var result = that._updateTaskDefinitionRecord(taskDefRec);
			}
		});


	},

    type: 'ProjectTaskCreateTaskDefDependencies_CanvasIndicators'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-26 08:34:48</sys_created_on>
        <sys_id>a35de2481bd634507e0d52c8624bcb65</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>ProjectTaskCreateTaskDefDependencies_CanvasIndicators</sys_name>
        <sys_package display_value="KPI Composer" source="sn_kpi_composer">62a50aba0f800010ad8350feb6767e4f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="KPI Composer">62a50aba0f800010ad8350feb6767e4f</sys_scope>
        <sys_update_name>sys_script_include_a35de2481bd634507e0d52c8624bcb65</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-29 07:20:20</sys_updated_on>
    </sys_script_include>
</record_update>
